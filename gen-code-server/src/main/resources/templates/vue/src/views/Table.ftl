!#parse!#name /src/views/${classInfo.businessModule}/${classInfo.name?uncap_first}.vue!#list<template>	<section>		<!--工具条-->		<el-col :span="24" class="toolbar" style="padding-bottom: 0px;">			<el-form :inline="true" :model="filters">				<el-form-item>					<el-select v-model="filters.name" placeholder="请选择属性">					<#list classInfo.columnList as fieldItem >						<el-option label="${fieldItem.beanAttr.cnName}" value="${fieldItem.beanAttr.name}"></el-option>					</#list>					</el-select>				</el-form-item>				<el-form-item>					<el-select v-model="filters.options" >						<el-option label="等于" value="="></el-option>						<el-option label="或者" value="or"></el-option>						<el-option label="不等于" value="!="></el-option>						<el-option label="大于" value=">"></el-option>						<el-option label="小于" value="<"></el-option>						<el-option label="模糊匹配" value="like"></el-option>						<el-option label="包含" value="like"></el-option>					</el-select>				</el-form-item>				<el-form-item>					<el-input v-model="filters.value" placeholder="请输入值"></el-input>				</el-form-item>				<el-form-item>					<el-button type="primary" v-on:click="get${classInfo.name}s">查询</el-button>				</el-form-item>				<el-form-item>					<el-button type="primary" @click="handleAdd">新增</el-button>				</el-form-item>			</el-form>		</el-col>		<!--列表-->		<el-table :data="${classInfo.name?uncap_first}s" highlight-current-row v-loading="listLoading" @selection-change="selsChange" style="width: 100%;">			<el-table-column type="selection" width="30">			</el-table-column>		<#list classInfo.columnList as fieldItem >			<el-table-column prop="${fieldItem.beanAttr.name}" label="${fieldItem.beanAttr.cnName}" sortable>            </el-table-column>		</#list>			<el-table-column label="操作" width="150">				<template slot-scope="scope">					<el-button size="small" @click="handleEdit(scope.$index, scope.row)">编辑</el-button>					<el-button type="danger" size="small" @click="handleDel(scope.$index, scope.row)">删除</el-button>				</template>			</el-table-column>		</el-table>		<!--工具条-->		<el-col :span="24" class="toolbar">			<el-button type="danger" @click="batchRemove" :disabled="this.sels.length===0">批量删除</el-button>			<el-pagination layout="prev, pager, next" @current-change="handleCurrentChange" :page-size="20" :total="total" style="float:right;">			</el-pagination>		</el-col>		<!--编辑界面-->		<el-dialog title="编辑${classInfo.desc}" v-model="editFormVisible" :close-on-click-modal="false">			<el-form :model="editForm" label-width="80px" :rules="editFormRules" ref="editForm">		<#list classInfo.columnList as fieldItem >			<#if !fieldItem.tableColumn.autoIncrement>                <el-form-item label="${fieldItem.beanAttr.cnName}" prop="${fieldItem.beanAttr.name}">					<#if fieldItem.beanAttr.typeClassName == 'Date'>                    <el-date-picker type="datetime" format="yyyy-MM-dd HH:mm:ss"  placeholder="选择日期" v-model="editForm.${fieldItem.beanAttr.name}"></el-date-picker>                    </#if>					<#if fieldItem.beanAttr.typeClassName == 'String'>					    <#if fieldItem.tableColumn.lenth gt 1000 >                    <el-input type="textarea" v-model="editForm.${fieldItem.beanAttr.name}"></el-input>   		                <#else>                    <el-input v-model="editForm.${fieldItem.beanAttr.name}" auto-complete="off"></el-input>						</#if>					</#if>					<#if fieldItem.beanAttr.typeClassName == 'Integer' ||  fieldItem.beanAttr.typeClassName == 'Long'>                     <el-input-number v-model="editForm.${fieldItem.beanAttr.name}"></el-input-number>					</#if>					<#if fieldItem.beanAttr.typeClassName == 'Boolean'>                     <el-switch on-text="" off-text="" v-model="editForm.${fieldItem.beanAttr.name}"></el-switch>					</#if>                </el-form-item>			</#if>		</#list>            </el-form>            <div slot="footer" class="dialog-footer">                <el-button @click.native="editFormVisible = false">取消</el-button>                <el-button type="primary" @click.native="editSubmit" :loading="editLoading">提交</el-button>            </div>		</el-dialog>		<!--新增界面-->		<el-dialog title="新增${classInfo.desc}" v-model="addFormVisible" :close-on-click-modal="false">			<el-form :model="addForm" label-width="80px" :rules="addFormRules" ref="addForm">		<#list classInfo.columnList as fieldItem >			<#if !fieldItem.tableColumn.autoIncrement>                <el-form-item label="${fieldItem.beanAttr.cnName}" prop="${fieldItem.beanAttr.name}">					<#if fieldItem.beanAttr.typeClassName == 'Date'>                     <el-date-picker type="datetime" format="yyyy-MM-dd HH:mm:ss" placeholder="选择日期" v-model="addForm.${fieldItem.beanAttr.name}"></el-date-picker>					</#if>					<#if fieldItem.beanAttr.typeClassName == 'String'>						<#if fieldItem.tableColumn.lenth gt 1000 >                    <el-input type="textarea" v-model="addForm.${fieldItem.beanAttr.name}"></el-input>						<#else>                    <el-input v-model="addForm.${fieldItem.beanAttr.name}" auto-complete="off"></el-input>						</#if>					</#if>					<#if fieldItem.beanAttr.typeClassName == 'Integer' ||  fieldItem.beanAttr.typeClassName == 'Long'>                    <el-input-number v-model="addForm.${fieldItem.beanAttr.name}"></el-input-number>					</#if>					<#if fieldItem.beanAttr.typeClassName == 'Boolean'>                    <el-switch on-text="" off-text="" v-model="addForm.${fieldItem.beanAttr.name}"></el-switch>					</#if>                </el-form-item>			</#if>		</#list>			</el-form>			<div slot="footer" class="dialog-footer">				<el-button @click.native="addFormVisible = false">取消</el-button>				<el-button type="primary" @click.native="addSubmit" :loading="addLoading">提交</el-button>			</div>		</el-dialog>	</section></template><script>    <#if (classInfo.businessModule)??>    import util from '../../common/js/util'    import { ${classInfo.name?uncap_first}PageList, ${classInfo.name?uncap_first}Detete,  ${classInfo.name?uncap_first}BatchDelete, ${classInfo.name?uncap_first}Update, ${classInfo.name?uncap_first}Detail, ${classInfo.name?uncap_first}Save } from '../../api/${classInfo.businessModule}/${classInfo.name?uncap_first}';	<#else>    import util from '../common/js/util'    import { ${classInfo.name?uncap_first}PageList, ${classInfo.name?uncap_first}Detete,  ${classInfo.name?uncap_first}BatchDelete, ${classInfo.name?uncap_first}Update, ${classInfo.name?uncap_first}Detail, ${classInfo.name?uncap_first}Save } from '../api/${classInfo.name?uncap_first}';	</#if>	export default {		data() {			return {				filters: {					name: '',					options: '',					value: '',				},				${classInfo.name?uncap_first}s: [],				total: 0,				page: 1,				listLoading: false,				sels: [],//列表选中列				editFormVisible: false,//编辑界面是否显示				editLoading: false,				editFormRules: {				},				//编辑界面数据				editForm: {				<#list classInfo.columnList as fieldItem >					<#if fieldItem.beanAttr.typeClassName == 'Date'>					${fieldItem.beanAttr.name}: null,					</#if>					<#if fieldItem.beanAttr.typeClassName == 'String'>					${fieldItem.beanAttr.name}: '',					</#if>					<#if fieldItem.beanAttr.typeClassName == 'Integer' ||  fieldItem.beanAttr.typeClassName == 'Long'>					${fieldItem.beanAttr.name}: 0,					</#if>					<#if fieldItem.beanAttr.typeClassName == 'Boolean'>					${fieldItem.beanAttr.name}: false,					</#if>				</#list>				},				addFormVisible: false,//新增界面是否显示				addLoading: false,				addFormRules: {				},				//新增界面数据				addForm: {				<#list classInfo.columnList as fieldItem >					<#if !fieldItem.tableColumn.autoIncrement>						<#if fieldItem.beanAttr.typeClassName == 'Date'>						${fieldItem.beanAttr.name}: null,						</#if>						<#if fieldItem.beanAttr.typeClassName == 'String'>						${fieldItem.beanAttr.name}: '',						</#if>						<#if fieldItem.beanAttr.typeClassName == 'Integer' ||  fieldItem.beanAttr.typeClassName == 'Long'>						${fieldItem.beanAttr.name}: 0,						</#if>						<#if fieldItem.beanAttr.typeClassName == 'Boolean'>						${fieldItem.beanAttr.name}: false,						</#if>					</#if>				</#list>				}			}		},		methods: {			handleCurrentChange(val) {				this.page = val;				this.get${classInfo.name}s();			},			//获取用户列表			get${classInfo.name}s() {				let para = {                    pageNo:this.page,                    length:20,					... this.filters,				};				this.listLoading = true;				${classInfo.name?uncap_first}PageList(para).then((res) => {					 const data = res.data || {};				    if(data.status == 0){                        this.total = data.data.total;					    this.${classInfo.name?uncap_first}s = data.data.rows;					}					this.listLoading = false;				});			},			//删除			handleDel: function (index, row) {				this.$confirm('确认删除该记录吗?', '提示', {					type: 'warning'				}).then(() => {					this.listLoading = true;					//NProgress.start();					let para = { id: row.id };				    ${classInfo.name?uncap_first}Detete(para).then((res) => {						this.listLoading = false;						//NProgress.done();						this.$message({							message: '删除成功',							type: 'success'						});						this.get${classInfo.name}s();					});				}).catch(() => {				});			},			//显示编辑界面			handleEdit: function (index, row) {				this.editFormVisible = true;				this.editForm = Object.assign({}, row);			},			//显示新增界面			handleAdd: function () {				this.addFormVisible = true;				this.addForm = {			<#list classInfo.columnList as fieldItem >				<#if !fieldItem.tableColumn.autoIncrement>					<#if fieldItem.beanAttr.typeClassName == 'Date'>					${fieldItem.beanAttr.name}: null,					</#if>					<#if fieldItem.beanAttr.typeClassName == 'String'>					${fieldItem.beanAttr.name}: '',					</#if>					<#if fieldItem.beanAttr.typeClassName == 'Integer' ||  fieldItem.beanAttr.typeClassName == 'Long'>					${fieldItem.beanAttr.name}: 0,					</#if>					<#if fieldItem.beanAttr.typeClassName == 'Boolean'>					${fieldItem.beanAttr.name}: false,					</#if>				</#if>			</#list>				};			},			//编辑			editSubmit: function () {				this.$refs.editForm.validate((valid) => {					if (valid) {						this.$confirm('确认提交吗？', '提示', {}).then(() => {							this.editLoading = true;							let para = Object.assign({}, this.editForm);                    <#list classInfo.columnList as fieldItem >                        <#if !fieldItem.tableColumn.autoIncrement>                            <#if fieldItem.beanAttr.typeClassName == 'Date'>                             para.${fieldItem.beanAttr.name} = para.${fieldItem.beanAttr.name} ? new Date(para.${fieldItem.beanAttr.name}) : null,                            </#if>                        </#if>                    </#list>						    ${classInfo.name?uncap_first}Update(para).then((res) => {								this.editLoading = false;								//NProgress.done();								this.$message({									message: '提交成功',									type: 'success'								});								this.$refs['editForm'].resetFields();								this.editFormVisible = false;								this.get${classInfo.name}s();							});						});					}				});			},			//新增			addSubmit: function () {				this.$refs.addForm.validate((valid) => {					if (valid) {						this.$confirm('确认提交吗？', '提示', {}).then(() => {							this.addLoading = true;							let para = Object.assign({}, this.addForm);					<#list classInfo.columnList as fieldItem >						<#if !fieldItem.tableColumn.autoIncrement>							<#if fieldItem.beanAttr.typeClassName == 'Date'>                            para.${fieldItem.beanAttr.name} = para.${fieldItem.beanAttr.name} ? new Date(para.${fieldItem.beanAttr.name}) : null,							</#if>						</#if>					</#list>						    ${classInfo.name?uncap_first}Save(para).then((res) => {								this.addLoading = false;								//NProgress.done();								this.$message({									message: '提交成功',									type: 'success'								});								this.$refs['addForm'].resetFields();								this.addFormVisible = false;								this.get${classInfo.name}s();							});						});					}				});			},			selsChange: function (sels) {				this.sels = sels;			},			//批量删除			batchRemove: function () {				var ids = this.sels.map(item => item.id).toString();				this.$confirm('确认删除选中记录吗？', '提示', {					type: 'warning'				}).then(() => {					this.listLoading = true;					//NProgress.start();					let para = { ids: ids };				    ${classInfo.name?uncap_first}BatchDelete(para).then((res) => {						this.listLoading = false;						//NProgress.done();						this.$message({							message: '删除成功',							type: 'success'						});						this.get${classInfo.name}s();					});				}).catch(() => {				});			}		},		mounted() {			this.get${classInfo.name}s();		}	}</script><style slot-scope></style>